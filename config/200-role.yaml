---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: potato-resolver-controller
  namespace: tekton-remote-resolution
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: potato-resolver-clusterrole
  namespace: tekton-remote-resolution
rules:
  - apiGroups: ["tekton.dev"]
    resources: ["tasks", "pipelines"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: potato-resolver-clusterbinding
  namespace: tekton-remote-resolution
subjects:
- kind: ServiceAccount
  name: potato-resolver-controller
  namespace: tekton-remote-resolution
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: potato-resolver-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-resolution-namespace-rbac-potatoresolver
  namespace: tekton-remote-resolution
subjects:
  - kind: ServiceAccount
    name: potato-resolver-controller
    namespace: tekton-remote-resolution
roleRef:
  kind: Role
  name: tekton-resolution-namespace-rbac
  apiGroup: rbac.authorization.k8s.io
---
# This binds the same clusterrole to the clusterresolver that normal
# resolvers get: the permission to read and write to ResolutionRequests
# across the entire cluster.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-resolution-potatoresolver
subjects:
  - kind: ServiceAccount
    name: potato-resolver-controller
    namespace: tekton-remote-resolution
roleRef:
  kind: ClusterRole
  name: tekton-resolution-resolution-request-updates
  apiGroup: rbac.authorization.k8s.io
