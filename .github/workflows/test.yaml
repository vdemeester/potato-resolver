on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

name: build-test-publish

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-
    - run: go env
    - name: go build
      run: go build -v ./...
    - name: go test
      run: go test -v ./...

  e2e:
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        pipeline-version:
        - v0.50.6
        - v0.53.7
        - v0.56.5
        - v0.59.1
        - latest
    name: e2e tests
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
    - uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
    - uses: ko-build/setup-ko@v0.6
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-      
    # instantiate a KinD (Kubernetes in Docker) cluster, installs `kubectl` and configures the
    # `kubeconfig` to reach the local cluster
    - uses: helm/kind-action@v1.10.0
      with:
        cluster_name: kind
        wait: 120s

    # installs Tekton Pipelines and `tkn` command line, including a local Container-Registry with
    # settings to reach it during testing
    - uses: openshift-pipelines/setup-tektoncd@v1
      with:
        pipeline_version: ${{ matrix.pipeline-version }}
        pipeline-feature-flags: '{"enable-api-fields": "alpha"}'
    - name: install manual-approval-gate custom task
      run: |
        kubectl create namespace tekton-remote-resolution
        ko apply --local -f config/
  
  publish:
    name: publish latest
    runs-on: ubuntu-latest
    needs: [ build ]

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
    - uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: ko-build/setup-ko@v0.6
    - run: |
        ko publish --push=${{ github.event_name != 'pull_request' }} --base-import-paths ./cmd/resolver
